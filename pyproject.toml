[project]
name = "aizotero"
version = "0.1.0"
description = "AI-powered paper reading assistant for Zotero"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "AIZotero Team"}
]
keywords = ["zotero", "ai", "papers", "research"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "aiohttp>=3.12.15",
    "fastapi>=0.116.1",
    "markitdown[pdf]>=0.1.2",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.1.1",
    "uvicorn[standard]>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.7",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["app/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.pyright]
venv = ".venv"
venvPath = "."

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pre-commit>=4.2.0",
    "ruff>=0.12.7",
]
